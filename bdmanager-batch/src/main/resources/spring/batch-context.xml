<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<!-- INFRASTRUCTURE -->
	<bean id="jobRegistry" class="org.springframework.batch.core.configuration.support.MapJobRegistry" />
	
	<bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>
	
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<!-- JOB -->
	<batch:job id="helloWorldJob" job-repository="jobRepository">
		<batch:step id="hello">
			<batch:tasklet ref="helloWolrdTasklet" />
		</batch:step>
	</batch:job>

	<batch:job id="fillSerieAndBdFromCsv" job-repository="jobRepository">
		<batch:step id="readWriteSerieFromCsv" next="readWriteBdFromCsv">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk commit-interval="1000" reader="mesBdReaderCsv" writer="mesBdWriterSerieToDatabase" />
			</batch:tasklet>
		</batch:step>
		<batch:step id="readWriteBdFromCsv">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk commit-interval="100" reader="mesBdReaderCsv" writer="mesBdWriterBdToDatabase" skip-limit="10">
					<batch:skippable-exception-classes>
						<batch:include class="com.cta.batch.exception.UnknownSerieException" />
					</batch:skippable-exception-classes>
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<batch:job id="fromDatabaseToElasticSearch" job-repository="jobRepository">
		<batch:step id="readWriteSerieFromDatabaseToElasticSearch">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk commit-interval="100" reader="serieWithBdFromDatabaseReader" writer="serieAndBdToElasticSearchWriter" />
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- TASKLET -->
	<bean id="helloWolrdTasklet" class="com.cta.batch.tasklet.HelloWolrdTasklet" />

	<!-- READER -->
	<bean id="mesBdReaderCsv" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="linesToSkip" value="1" />
		<property name="comments" value="'#{{'#'}}'" />
		<property name="resource" value="data/MesBDs.csv" />
		<property name="lineMapper" ref="csvToBdMapper" />
	</bean>

	<bean id="csvToBdMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="lineTokenizer">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
				<property name="delimiter" value="," />
				<property name="names" value="serie,tome,titre,sousTitre,auteurs,editeurs" />
			</bean>
		</property>
		<property name="fieldSetMapper">
			<bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
				<property name="targetType" value="com.cta.batch.model.BdFromCsv" />
				<property name="distanceLimit" value="0" />
			</bean>
		</property>
	</bean>

	<bean id="serieWithBdFromDatabaseReader" class="com.cta.batch.reader.SerieWithBdFromDatabaseReader">
		<property name="sessionFactory" ref="hibernateSessionFactory" />
	</bean>

	<!-- WRITER -->
	<bean id="simpleLoggerWriter" class="com.cta.batch.writer.SimpleLoggerWriter" />

	<bean id="hibernateBaseItemWriter" abstract="true">
		<property name="sessionFactory" ref="hibernateSessionFactory" />
	</bean>

	<bean id="mesBdWriterSerieToDatabase" class="com.cta.batch.writer.SerieWriter" parent="hibernateBaseItemWriter" />
	<bean id="mesBdWriterBdToDatabase" class="com.cta.batch.writer.BdWriter" parent="hibernateBaseItemWriter" />

	<bean id="serieAndBdToElasticSearchWriter" class="com.cta.batch.writer.SerieAndBdToElasticSearchWriter" />
</beans>
